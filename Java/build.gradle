buildscript {
    ext.versions = [
        'androidAppCompatV7':       '28.0.0',
        'guava':                    '31.1',
        'okhttp':                   '4.2.0',
        'jackson':                  '2.10.1',
        'jna':                      '5.4.0',
        'junit':                    '4.12',
    ]
    ext.deps = [
        'androidAppCompatV7':       "com.android.support:appcompat-v7:${versions.androidAppCompatV7}",
        'guavaAndroid':             "com.google.guava:guava:${versions.guava}-android",
        'guavaJre':                 "com.google.guava:guava:${versions.guava}-jre",
        'okhttp':                   "com.squareup.okhttp3:okhttp:${versions.okhttp}",
        'jacksonCore':              "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
        'jacksonAnnotations':       "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}",
        'jacksonDatabind':          "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
        'jacksonDatabindGuava':     "com.fasterxml.jackson.datatype:jackson-datatype-guava:${versions.jackson}",
        'jnaJre':                   "net.java.dev.jna:jna:${versions.jna}",
        'junit':                    "junit:junit:${versions.junit}",
    ]
    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    // Checker Framework pluggable type-checking
    id 'org.checkerframework' version '0.6.25' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    afterEvaluate {
        def publishing = extensions.findByType(PublishingExtension)
        if (publishing != null) {
            publishing.repositories {
                maven {
                    credentials {
                        username project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
                        password project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
                    }
                    url "$maven_url/${project.name}/"
                }
            }
        }
    }
}

subprojects { subproject ->
    apply plugin: 'org.checkerframework'

    checkerFramework {
        excludeTests = true
        checkers = [
             //'org.checkerframework.checker.nullness.NullnessChecker',
             'org.checkerframework.checker.signedness.SignednessChecker',
            // 'org.checkerframework.checker.resourceleak.ResourceLeakChecker',
            //'org.checkerframework.checker.signature.SignatureChecker'
        ]
        extraJavacArgs = [
            // Uncomment -proc:none to disable all annotation processing and speed up the build.
            // '-proc:none',
            '-Awarns',
            '-AshowSuppressWarningsStrings',
            '-AshowPrefixInWarningMessages',
            //'-AsuggestPureMethods',
            //'-AcheckPurityAnnotations',
            '-ArequirePrefixInWarningSuppressions',
            '-AwarnUnneededSuppressions',
            '-Xmaxwarns',
            '10000',
        ]
    }
    dependencies {
        checkerFramework 'org.checkerframework:checker:3.32.0'
        //implementation 'org.checkerframework:checker-qual:3.32.0'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
